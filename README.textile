h1. This is what you all have been waiting for: RUBY BINDINGS FOR MAPNIK

Soon all of your mapping will be like pouding ch√¥meur!

h2. Requirements
* Mapnik2 (aka the trunk available here: http://svn.mapnik.org/trunk)
* Ruby 1.8.7
* These rubygems:
** ZenTest 4.0.0
** rice 1.4.2
** hoe 2.10.0
** rake-compiler 0.7.9

h2. Building

Compile and install Mapnik2. The mapnik-config program should then be on your PATH.

You can then use @rake compile@ to build the extension, and @rake test@ to run the
unit tests. @rake clean@ will do what you think it does, and you can stack up
rake tasks so @rake clean compile test@ might be a nice thing to keep around.

Note: on osx the default rake compile will try to build universal, and your
mapnik install is unlikely built universal. Check the architecture of libmapnik2.dylib like:

    file /usr/local/lib/libmapnik2.dylib

On a system where your compiler defaults to 64bit you'll see: 'Mach-O 64-bit dynamically linked shared library x86_64'

So to avoid a linking warning like:

    ld: warning: ignoring file /usr/local/lib/libmapnik2.dylib, file was built for unsupported file format which is not the architecture being linked (i386)

You can pass this before rake compile:

    export ARCHFLAGS="-arch x86_64"

h2. Development

Obviously this is under development, and nowhere close to being complete, or 
really useful at the moment. Help would be greatly appreciated, providing 
the extension will always compile, and all changes are accompanied by unit 
tests.

Autotest works great with this code base with this in your .autotest: 
@Autotest.add_hook :run_command {|at|system "rake compile"}@
